# security:
#     # encoder
#     encoders:
#         App\Entity\User:
#             algorithm: bcrypt

#     # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
#     providers:
#         our_db_provider:
#             entity:
#                 class: App\Entity\User
#                 property: email

#     firewalls:
#         main:
#             pattern:   ^/
#             http_basic: ~
#             provider: our_db_provider
#             anonymous: ~
#             form_login:
#                 login_path: login
#                 check_path: login
#                 default_target_path: user_post
#             logout:
#                 path:  logout
#                 target: blog

#     role_hierarchy:
#         ROLE_ADMIN:      ROLE_USER
#         #ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

#     # Easy way to control access for large sections of your site
#     # Note: Only the *first* access control that matches will be used
#     access_control:
#     - { path: ^/admin, roles: ROLE_ADMIN }
#     - { path: ^/user/post, roles: ROLE_USER }

security:
    encoders:
        App\Entity\User: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email

    firewalls:
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager
                # if you are using Symfony < 2.8, use the following config instead:
                # csrf_provider: form.csrf_provider

            logout:       true
            anonymous:    true

    access_control:
    - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/admin/, role: ROLE_ADMIN }